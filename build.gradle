plugins {
    id 'java'
    // this allows us to create a executable java (JVM) application
    // this also create windows/linux scripts to run our application
    // so we don't have to use the terminal to run the application
    id 'application'
}

group = 'sdm.build.automation'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}



// This was not created by default by gradle
// This allows the .jar (/build/libs/*.jar) generated by the build process to be a runnable jar file
// Because we declare which class is the entrypoint (the class with public static void main) of the jar file
jar {
    manifest {
        attributes('Main-Class': 'Main')
    }
}



// This indicate the entrypoint of the application
// To run the application open the gradle panel on the right
// Under Tasks > application double click the run script
// To generate a distribution(zip file)
// Under Tasks > distribution double click the distZip script
// This will generate a build/distribution folder with the zip file
// this zip file contains two folder:
// bin folder with the scripts to run the application for windows or linux
// lib folder with the jar file
application{
    mainClass = 'Main'
}